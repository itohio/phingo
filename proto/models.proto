syntax = "proto3";
package types;
option go_package = "github.com/itohio/phingo/pkg/types";

message Locale {
    map<string, string> translations = 1;
}

message Config {
    message Style {
        string what = 1;
        string font = 2;
        string align = 3;
    }
    message Export {
        string what = 1;
        repeated Style styles = 2;
    }

    repeated Export export = 10;

    map<string, string> params = 100;

    Locale locale = 500;
}

message Price {
    string denom = 1;
    float amount = 2;
    uint32 decimals = 3;
}

message Account {
    string id = 1;
    string name = 2;
    string denom = 3;
    int32 decimals = 4;
    map<string, string> contact = 10;

    bytes password = 50;    // Used for password-protected PDFs
    bytes privateKey = 51;  // Used for signing HTML/PDFs
    string keyring = 52;    // Used for signing HTML/PDFs

    string invoiceFileNameFormat = 100;
    string invoiceCodeFormat = 101;
    uint32 invoiceDuePeriod = 102;

    Locale locale = 500;
}

message Accounts {
    repeated Account accounts = 1;
    map<string, string> params = 2;
}

message Client {
    string id = 1;
    string name = 2;
    string description = 3;
    repeated string notes = 4;
    map<string, string> contact = 5;

    string invoiceFileNameFormat = 100;

    Locale locale = 500;
}

message Clients {
    repeated Client clients = 1;
    map<string, string> params = 2;
}

message Project {
    message LogEntry {
        string description = 1;
        string start = 2;
        int64 duration = 3;
        float progress = 4;
    }
    
    string id = 1;
    string name = 2;
    string description = 3;
    string fileName = 4;

    oneof rate {
        float hourly = 5;
        float total = 6;
    }
    bool completed = 7;

    map<string, string> params = 10;

    string startDate = 20;
    string endDate = 21;

    Account account = 31;
    Client client = 30;

    repeated LogEntry log = 50;
}


message Invoice {
    message Item {
        string name = 1;
        string unit = 2;
        float amount = 3;
        float rate = 4;
        bool extra = 10;    // indicates whether this is an extra (applied after total)
    }
    message Payment {
        string name = 1;
        string date = 2;
        string comment = 3;
        Price amount = 4;
        float marketValue = 5; // if set, indicates market value relative to invoice denomination
    }

    string fileName = 1;    // internal: filename of the invoice file
    string id = 2;          // unique id of the invoice
    string code = 4;        // registration code
    string issueDate = 5;   // date-time when the invoice was issued at
    string dueDate = 6;     // the invoice must be payed until this date

    map<string, string> params = 10;
    Project project = 30;   // Copy of a project (if any)
    Client client = 32;     // Copy of a client
    Account account = 33;   // Copy of an account

    repeated Item items = 50;   // Billable, discount, shipping, etc items. Also, extra items.

    Price total = 100;
    Price marketValue = 101;    // if set, will force recalculation into this denomination

    repeated Payment payments = 200;
}

message Template {
    string id = 1;
    string what = 2;
    string fileName = 3;
    map<string, string> params = 4;
    bytes text = 10;
}

message AccountTemplateContext {
    Config config = 1;
    Template template = 2;
    repeated Account accounts = 10;
}

message ClientTemplateContext {
    Config config = 1;
    Template template = 2;
    repeated Client clients = 10;
}

message ProjectTemplateContext {
    Config config = 1;
    Template template = 2;
    repeated Project projects = 10;
}

message InvoiceTemplateContext {
    Config config = 1;
    Template template = 2;
    Account account = 3;
    repeated Invoice invoices = 10;
}
